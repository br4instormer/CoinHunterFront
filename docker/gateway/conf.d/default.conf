server {
    listen 80;
    server_name www.coin-hunter.trade coin-hunter.trade;
    server_tokens off;

    include /etc/nginx/snippets/health.conf;

    location / {
        rewrite ^(.*) https://coin-hunter.trade$1 permanent;
    }
}

server {
    listen 443 ssl;
    http2 on;
    server_name www.coin-hunter.trade;
    server_tokens off;

    rewrite ^(.*) https://coin-hunter.trade$1 permanent;

    include /etc/nginx/snippets/cert.conf;
    include /etc/nginx/snippets/ssl.conf;
}

server {
    listen 443 ssl;
    http2 on;
    server_name coin-hunter.trade;
    server_tokens off;

    access_log off;

    tcp_nodelay on;
    tcp_nopush on;
    sendfile on;

    gzip on;
    gzip_disable "msie6";
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_http_version 1.1;
    gzip_vary on;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    client_header_timeout 12;
    client_body_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;
    client_body_buffer_size 10k;
    client_header_buffer_size 1k;
    client_max_body_size 8m;
    large_client_header_buffers 4 4k;

    proxy_http_version 1.1;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header  Upgrade $http_upgrade;
    proxy_set_header  Connection 'upgrade';
    proxy_set_header  Host $host;
    proxy_set_header  X-Real-IP $remote_addr;
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Host $remote_addr;
    proxy_set_header  X-NginX-Proxy true;
    proxy_ssl_session_reuse off;
    proxy_redirect off;
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 32 4k;
    proxy_max_temp_file_size 0;

    include /etc/nginx/snippets/cert.conf;
    include /etc/nginx/snippets/resolver.conf;
    include /etc/nginx/snippets/ssl.conf;

    # root /var/www/virtual/coin-hunter.trade/htdocs;

    location / {
        set $upstream http://site:3000;
        proxy_pass $upstream;
    }
}